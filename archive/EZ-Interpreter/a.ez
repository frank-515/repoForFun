// The standard lib for EZ-lang
// Memory Structure:
//  Reserve area - Store basic information, IO
//  Stack area   - Runtime stack, all variable was saved here
//  Heap area    - all array was saved here, Use make(size) -> ptr to allocate space

func getMemSize(int i) {
    return [0];
};

func getStackBegin(int i) {
    return [4];
};

func getHeapBegin(int i) {
    return [8];
};

func getHeapSize(int i) {
    return getMemSize() - getHeapBegin();
};

func initHeap(int i) {

};

func make(int size) {

};

// Math

func isPrime(int num) {
    int i = num - 1;
    if (num == 2) {return 1;};
    if (num == 1) {return 0;};
    while (1 < i) {
        if (num % i) {} else {return 0;};
        i = i - 1;
    };
    return 1;
};

func getPrimeAbove(int i) {
    while (1 < i) {
        if (isPrime(i)) {print(i);};
        i = i - 1;
    };
};

func getPrimeAbove_r(int i){
    if (isPrime(i)) {print(i);};
    if (1 < i) {getPrimeAbove_r(i - 1);};
};

getPrimeAbove_r(1000);